import os.path as path
import pandas as pd
import numpy as np
import iomb.economic as economic
import iomb.sat as sat


def make_sat_table(*args: list) -> sat.Table:
    """ Constructs the satellite table from the given CSV files. """
    table = sat.Table()
    for csv_file in args:
        table.add_file(csv_file)
    return table


def read_csv_data_frame(csv_file) -> pd.DataFrame:
    """ Loads a pandas DataFrame from the given CSV file. """
    df = pd.read_csv(csv_file, index_col=0, header=0)
    df.fillna(0.0, inplace=True)

    def strip(x): return x.strip()

    df.rename(index=strip, columns=strip, inplace=True)
    return df


class DataFile(object):
    """
    A data file is a defined resource in the data folder that contains data in
    a specified format.
    """

    def __init__(self, io_module: str, name: str, description=''):
        self.io_module = io_module
        self.name = name
        self.description = description

    @property
    def path(self):
        return self.io_module + '/' + self.name


USE_TABLE = DataFile('economic', 'use_table.csv',
                     'Use table of the economic module')
MAKE_TABLE = DataFile('economic', 'make_table.csv',
                      'Make table of the economic module')


class DataFolder(object):
    """
    In the data folder all files that are provided by the user and files that
    are generated by the model builder are stored in a defined folder layout.
    """

    def __init__(self, data_dir='./data'):
        self.data_dir = data_dir

    def has_file(self, io_file: DataFile) -> bool:
        """
        Checks if the given file is contained in this data folder.
        """
        if type(io_file) is not DataFile:
            raise TypeError('Unknown type: use file constants of the module')
        return path.isfile(self.data_dir + '/' + io_file.path)

    def load_data_frame(self, io_file: DataFile) -> pd.DataFrame:
        """ Loads a pandas DataFrame from the given file. """
        # TODO: check io_file.path
        file_path = self.data_dir + '/' + io_file.path
        return read_csv_data_frame(file_path)

    def get_economic_module(self) -> economic.Module:
        """ Creates the economic module from the make and use tables in this
            data folder.
        """
        use_table = self.load_data_frame(USE_TABLE)
        make_table = self.load_data_frame(MAKE_TABLE)
        return economic.Module(use_table, make_table)
